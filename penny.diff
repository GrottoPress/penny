diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
index 31576d5..6b88761 100644
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -16,7 +16,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        crystal: [1.3.2]
+        crystal: [1.4.0]
     runs-on: ubuntu-latest
     continue-on-error: false
     steps:
@@ -34,7 +34,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        crystal: [1.0.0, latest]
+        crystal: [1.4.0, latest]
         experimental: [false]
         include:
           - crystal: nightly
diff --git a/config/locales/en.yml b/config/locales/en.yml
index 7991a3b..77b1907 100644
--- a/config/locales/en.yml
+++ b/config/locales/en.yml
@@ -268,7 +268,6 @@ en:
     error:
       active_at_required: Active time is required
       bearer_login_notify_required: Bearer login notification was not set
-      bearer_scopes_empty: Scopes cannot be empty
       bearer_scopes_invalid: One or more scopes are not valid
       bearer_scopes_required: Scopes is required
       email_invalid: Email format is not valid
diff --git a/package.json b/package.json
index f5acd7b..fd6b12f 100644
--- a/package.json
+++ b/package.json
@@ -3,8 +3,7 @@
   "private": true,
   "dependencies": {
     "@rails/ujs": "^6.0.0",
-    "normalize-scss": "^7.0.1",
-    "turbolinks": "^5.2.0"
+    "modern-normalize": "^1.1.0"
   },
   "scripts": {
     "heroku-postbuild": "yarn prod",
diff --git a/shard.yml b/shard.yml
index b9d65f5..cde9c9f 100644
--- a/shard.yml
+++ b/shard.yml
@@ -10,21 +10,24 @@ targets:
   app:
     main: src/start_server.cr
 
-crystal: ~> 1.0
+crystal: ~> 1.4
 
 dependencies:
+  avram:
+    github: luckyframework/avram
+    version: ~> 1.0.0-rc1
   lucky:
     github: luckyframework/lucky
-    version: ~> 0.30.0
+    version: ~> 1.0.0-rc1
   lucky_env:
     github: luckyframework/lucky_env
     version: ~> 0.1.4
   carbon:
     github: luckyframework/carbon
-    version: ~> 0.2.0
+    version: ~> 0.3.0
   carbon_sendgrid_adapter:
     github: luckyframework/carbon_sendgrid_adapter
-    version: ~> 0.1.0
+    version: ~> 0.3.0
   envy:
     github: GrottoPress/envy
     version: ~> 0.3.0
@@ -33,7 +36,7 @@ dependencies:
     version: ~> 0.2.1
   shield:
     github: GrottoPress/shield
-    version: ~> 0.16.0
+    version: ~> 0.17.0
   unslash:
     github: GrottoPress/unslash
     version: ~> 0.1.0
@@ -41,7 +44,7 @@ dependencies:
 development_dependencies:
   ameba:
     github: crystal-ameba/ameba
-    version: ~> 0.14.3
+    version: ~> 1.0.0
   lucky_flow:
     github: luckyframework/lucky_flow
-    version: ~> 0.7.3
+    version: ~> 0.9.0
diff --git a/spec/setup/flow.cr b/spec/setup/flow.cr
index 6b14f50..504a3d3 100644
--- a/spec/setup/flow.cr
+++ b/spec/setup/flow.cr
@@ -1,7 +1,37 @@
+# For more detailed documentation, visit
+# https://luckyframework.org/guides/testing/html-and-interactivity
+
 LuckyFlow.configure do |settings|
   settings.stop_retrying_after = 200.milliseconds
   settings.base_uri = Lucky::RouteHelper.settings.base_uri
-  settings.driver = LuckyFlow::Drivers::Chrome
+
+  # LuckyFlow will install the chromedriver for you located in
+  # ~./webdrivers/. Uncomment this to point to a specific driver
+  # settings.driver_path = "/path/to/specific/chromedriver"
 end
 
-Spec.before_each { LuckyFlow::Server::INSTANCE.reset }
+# By default, LuckyFlow is set in "headless" mode (no browser window shown).
+# Uncomment this to enable running `LuckyFlow` in a Google Chrome window instead.
+# Be sure to disable for CI.
+#
+# LuckyFlow.default_driver = "chrome"
+
+# LuckyFlow uses a registry for each driver. By default, chrome, and headless_chrome
+# are available. If you'd like to register your own custom driver, you can register
+# it here.
+#
+# LuckyFlow::Registry.register :firefox do
+#   # add your custom driver here
+# end
+
+# Setup specs to allow you to change the driver on the fly
+# per spec by setting a tag on specific specs. Requires the
+# driver to be registered through `LuckyFlow::Registry` first.
+#
+# ```
+# it "uses headless_chrome" do
+# end
+# it "uses webless", tags: "webless" do
+# end
+# ```
+LuckyFlow::Spec.setup
diff --git a/spec/spec_helper.cr b/spec/spec_helper.cr
index 31992e5..dd4ba7b 100644
--- a/spec/spec_helper.cr
+++ b/spec/spec_helper.cr
@@ -2,6 +2,8 @@ ENV["LUCKY_ENV"] = "test"
 
 require "spec"
 require "lucky_flow"
+require "lucky_flow/ext/lucky"
+require "lucky_flow/ext/avram"
 
 require "../src/app"
 require "./support/flows/base_flow"
diff --git a/src/actions/api/bearer_logins/token/verify.cr b/src/actions/api/bearer_logins/token/verify.cr
new file mode 100644
index 0000000..09a08e9
--- /dev/null
+++ b/src/actions/api/bearer_logins/token/verify.cr
@@ -0,0 +1,7 @@
+class Api::BearerLogins::Token::Verify < ApiAction
+  include Shield::Api::BearerLogins::Token::Verify
+
+  post "/bearer-logins/token/verify" do
+    run_operation
+  end
+end
diff --git a/src/actions/api/bearer_logins/verify.cr b/src/actions/api/bearer_logins/verify.cr
deleted file mode 100644
index 7714418..0000000
--- a/src/actions/api/bearer_logins/verify.cr
+++ /dev/null
@@ -1,7 +0,0 @@
-class Api::BearerLogins::Verify < ApiAction
-  include Shield::Api::BearerLogins::Verify
-
-  post "/bearer-logins/verify" do
-    run_operation
-  end
-end
diff --git a/src/actions/api/email_confirmations/token/verify.cr b/src/actions/api/email_confirmations/token/verify.cr
new file mode 100644
index 0000000..bb5fbb3
--- /dev/null
+++ b/src/actions/api/email_confirmations/token/verify.cr
@@ -0,0 +1,9 @@
+class Api::EmailConfirmations::Token::Verify < ApiAction
+  include Shield::Api::EmailConfirmations::Token::Verify
+
+  skip :pin_email_confirmation_to_ip_address
+
+  post "/email-confirmations/token/verify" do
+    run_operation
+  end
+end
diff --git a/src/actions/api/email_confirmations/verify.cr b/src/actions/api/email_confirmations/verify.cr
deleted file mode 100644
index 9214c6d..0000000
--- a/src/actions/api/email_confirmations/verify.cr
+++ /dev/null
@@ -1,9 +0,0 @@
-class Api::EmailConfirmations::Verify < ApiAction
-  include Shield::Api::EmailConfirmations::Verify
-
-  skip :pin_email_confirmation_to_ip_address
-
-  post "/email-confirmations/verify" do
-    run_operation
-  end
-end
diff --git a/src/actions/api/password_resets/token/verify.cr b/src/actions/api/password_resets/token/verify.cr
new file mode 100644
index 0000000..cfd3085
--- /dev/null
+++ b/src/actions/api/password_resets/token/verify.cr
@@ -0,0 +1,9 @@
+class Api::PasswordResets::Token::Verify < ApiAction
+  include Shield::Api::PasswordResets::Token::Verify
+
+  skip :pin_password_reset_to_ip_address
+
+  post "/password-resets/token/verify" do
+    run_operation
+  end
+end
diff --git a/src/actions/api/password_resets/verify.cr b/src/actions/api/password_resets/verify.cr
deleted file mode 100644
index a9a4d87..0000000
--- a/src/actions/api/password_resets/verify.cr
+++ /dev/null
@@ -1,9 +0,0 @@
-class Api::PasswordResets::Verify < ApiAction
-  include Shield::Api::PasswordResets::Verify
-
-  skip :pin_password_reset_to_ip_address
-
-  post "/password-resets/verify" do
-    run_operation
-  end
-end
diff --git a/src/actions/api_action.cr b/src/actions/api_action.cr
index d10019a..1473c93 100644
--- a/src/actions/api_action.cr
+++ b/src/actions/api_action.cr
@@ -1,7 +1,14 @@
 abstract class ApiAction < Lucky::Action
+  # IMPORTANT!:
+  #   This module reduces `Shield::Api::LoginPipes` from an authentication
+  #   pipe to a delegated authorization pipe. Once included, bearer tokens
+  #   retrieved from the `Authorization` header MUST NOT be used as proof
+  #   of authentication.
+  include Shield::Api::BearerLoginPipes
+
   skip :pin_login_to_ip_address
 
-  accepted_formats [:html, :json], default: :json
+  accepted_formats [:json]
 
   route_prefix "/api/v0"
 
diff --git a/src/app.cr b/src/app.cr
index 5fc2488..c03e31f 100644
--- a/src/app.cr
+++ b/src/app.cr
@@ -8,6 +8,7 @@
 require "envy"
 require "lucky_env"
 require "lucky"
+require "avram/lucky"
 require "carbon"
 require "carbon_sendgrid_adapter"
 require "shield"
diff --git a/tasks.cr b/tasks.cr
index 8bc2590..fc1057e 100644
--- a/tasks.cr
+++ b/tasks.cr
@@ -19,5 +19,6 @@ require "./tasks/**"
 
 # Load Lucky tasks (dev, routes, etc.)
 require "lucky/tasks/**"
+require "avram/lucky/tasks"
 
 LuckyTask::Runner.run
